Documentação Técnica: Sistema de Registro de Vendas

Introdução
O Sistema de Registro de Vendas é uma aplicação web desenvolvida para permitir o registro de vendas, geração de relatórios em formato Excel e opcionalmente o envio desses relatórios por e-mail. Este documento fornece uma visão geral detalhada da arquitetura, funcionalidades, requisitos, instalação e uso do sistema.

Arquitetura
O sistema é construído utilizando o framework Flask em Python para o backend e HTML/CSS/JavaScript para o frontend. A manipulação de dados é feita com a biblioteca Pandas para Python, permitindo o processamento e geração de relatórios em formato Excel. O envio de e-mails é gerenciado pelo Flask-Mail, configurado para utilizar um servidor SMTP.

## Componentes Principais
Backend (Python Flask):

Responsável pelo roteamento de URLs, processamento de dados do formulário e geração de relatórios.
Utiliza Pandas para manipulação de dados e geração de arquivos Excel.
Integração com Flask-Mail para envio de e-mails.
Frontend (HTML/CSS/JavaScript):

Interface de usuário para registro de vendas.
Validação de entrada de dados utilizando JavaScript.
Responsividade para adaptação a diferentes tamanhos de tela.
Banco de Dados:
Não utilizado neste sistema, pois os dados são manipulados e armazenados temporariamente em memória durante a sessão do usuário.

Funcionalidades
Registro de Vendas
Campos de Entrada:
Código de venda, data, ID da loja, produto, quantidade e valor unitário.
Validações de entrada para garantir que os campos obrigatórios sejam preenchidos corretamente.

Cálculo Automático
Valor Final:
O sistema calcula automaticamente o valor total da venda baseado na quantidade e valor unitário inseridos.
Adição Dinâmica de Linhas

Adicionar e Excluir Linhas:
Os usuários podem adicionar novas linhas dinamicamente para registrar múltiplas vendas em uma única sessão.
Funcionalidade de exclusão de linhas para remover vendas indesejadas.

Opções Opcionais
Salvar e Enviar Relatório:
Opção de especificar um diretório para salvar o relatório gerado em formato Excel.
Opção de fornecer um endereço de e-mail para envio automático do relatório por e-mail.

Validações
Validação de Entrada:
Implementação de validações para garantir que a quantidade seja um número inteiro e o valor unitário seja um número válido.

Requisitos de Ambiente

Requisitos de Software
Python 3.x
Flask 2.x
Pandas 1.x
Flask-Mail 0.9.x
  
Configuração do Ambiente
Clone o repositório do sistema de registro de vendas.
  
Crie um ambiente virtual (recomendado):
bash
Copiar código
python -m venv venv
  
Ative o ambiente virtual:
Windows:
bash
  
Copiar código
venv\Scripts\activate
  
Unix/MacOS:
bash
Copiar código
source venv/bin/activate
  
Instale as dependências:
bash
  
Copiar código
pip install -r requirements.txt

Configure as variáveis de ambiente para o envio de e-mails (SMTP).
Instalação e Execução
Após configurar o ambiente e instalar as dependências, execute a aplicação Flask:
bash
Copiar código
python app.py
Acesse o sistema através do navegador web, geralmente em http://localhost:5000.

Explicação dos Testes Unitários
Teste de Registro de Nova Venda (test_registro_nova_venda):

Testa se é possível registrar uma nova venda no sistema e verificar se o redirecionamento para a página inicial ocorre corretamente.
Teste de Edição de Venda Registrada (test_edicao_venda_registrada):

Testa se é possível editar uma venda já registrada e verificar se o redirecionamento para a página inicial ocorre corretamente.
Teste de Exclusão de Venda Registrada (test_exclusao_venda_registrada):

Testa se é possível excluir uma venda já registrada e verificar se o redirecionamento para a página inicial ocorre corretamente.
Teste de Validação de Quantidade de Produtos (test_validacao_quantidade_produtos):

Testa se o sistema valida corretamente a entrada de quantidade de produtos como números inteiros.
Teste de Validação de Valor Unitário dos Produtos (test_validacao_valor_unitario_produtos):

Testa se o sistema valida corretamente a entrada de valor unitário como números válidos.
Teste de Geração e Envio de Relatório por E-mail (test_geracao_envio_relatorio_email):

Testa se o sistema gera e envia corretamente o relatório de vendas por e-mail.
Teste de Filtragem de Vendas por Data (test_filtragem_vendas_por_data):

Testa se o sistema filtra corretamente as vendas com base em um intervalo de datas específico.
Teste de Exportação de Relatório para PDF (test_exportacao_relatorio_pdf):

Testa se o sistema exporta corretamente o relatório de vendas para formato PDF.
Teste de Importação de Dados de Vendas de Arquivo Externo (test_importacao_dados_vendas_arquivo_externo):

Testa se o sistema importa corretamente dados de vendas de um arquivo CSV externo.
Teste de Configuração de E-mail para Envio Automático (test_configuracao_email_envio_automatico):

Testa se o administrador pode configurar corretamente as variáveis de ambiente para o envio automático de e-mails.
Executando os Testes
Para executar os testes unitários, você pode salvar o código acima em um arquivo test_app.py e executá-lo diretamente via linha de comando:

bash
Copiar código
python test_app.py
Certifique-se de que todas as dependências necessárias estejam instaladas, como Flask, Flask-Testing, Flask-Mail, e outras bibliotecas utilizadas no projeto. Estes testes ajudarão a garantir que cada funcionalidade do sistema esteja funcionando corretamente e de acordo com as especificações definidas nos casos de teste.


Considerações Finais
Este documento fornece uma visão geral detalhada do Sistema de Registro de Vendas, abrangendo desde a arquitetura até os detalhes de implementação, configuração e uso. Certifique-se de ajustar e expandir esta documentação conforme necessário para refletir especificidades adicionais ou alterações futuras no sistema.


